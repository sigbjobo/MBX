# After changing this file, check it on:
#   http://lint.travis-ci.org/
# Core file taken from @dgasmith 
# https://github.com/dgasmith/gau2grid/blob/master/.travis.yml

language: c++
sudo: false
matrix:

  include:

  - os: linux
    compiler: clang
    addons: &1
      apt:
        sources:
        - llvm-toolchain-trusty-7
        - ubuntu-toolchain-r-test
        packages:
        - clang-7
        - lcov
        - libfftw3-dev
    env:
      - CXX_COMPILER='clang++-7'
      - CXX_FLAGS="-fPIC"
#      - CXX_FLAGS="-Xclang -coverage-cfg-checksum -Xclang -coverage-no-function-names-in-data -Xclang -coverage-version=\'407*\'" 
      - C_COMPILER='clang-7'
      - PYTHON_VER='3.5'
      - BUILD_TYPE='debug'
      - NAME='clang'
      - VERSION='7'

  - os: linux
    compiler: gcc
    addons: &2
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
        - gcc-4.9
        - libfftw3-dev
    env:
      - CXX_COMPILER='g++-4.9'
      - C_COMPILER='gcc-4.9'
      - CXX_FLAGS="-fPIC --coverage"
      - PYTHON_VER='3.5'
      - BUILD_TYPE='debug'
      - NAME='gcc'
      - VERSION='4.9'

  - os: linux
    compiler: gcc
    addons: &3
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
        - gcc-7
        - libfftw3-dev
    env:
      - CXX_COMPILER='g++-7'
      - C_COMPILER='gcc-7'
      - CXX_FLAGS="-fPIC --coverage"
      - PYTHON_VER='3.5'
      - BUILD_TYPE='debug'
      - NAME='gcc'
      - VERSION='7'

before_install:
  - uname -a
  - free -m
  - df -h
  - ulimit -a

install:
    # Pull down a miniconda
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"

    # Build out the environment
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda create -q -n gg_env python=${PYTHON_VER} numpy mpmath pytest numexpr cmake=3.12.4 pybind11 -c conda-forge
  - source activate gg_env

    # Install anything not in conda
  - pip install codecov
  - pip install pytest-cov
  - conda list
  - export

before_script:
#  - python -V
#  - python -c 'import numpy; print(numpy.version.version)'
#  - pip install -e .

    # Setup CMake
  - > 
    cmake -Bbuild -H.
    -DENABLE_PYTHON_BINDINGS=ON
    -DCMAKE_CXX_COMPILER=${CXX_COMPILER}
    -DCMAKE_C_COMPILER=${C_COMPILER}
    -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
    -DENABLE_XHOST=OFF
    -DCMAKE_PREFIX_PATH=${CONDA_PREFIX}
    -DCMAKE_CXX_FLAGS="-O0 ${CXX_FLAGS}"
    -DUSE_OPENMP:BOOL=FALSE
  - cd build
  - travis_wait 60 make VERBOSE=1 -j 2
  - make install
  - cd .. 
  - mv install install_noOpenMP
  - rm -rf build
  - >
    cmake -Bbuild -H.
    -DENABLE_PYTHON_BINDINGS=ON
    -DCMAKE_CXX_COMPILER=${CXX_COMPILER}
    -DCMAKE_C_COMPILER=${C_COMPILER}
    -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
    -DCMAKE_PREFIX_PATH=${CONDA_PREFIX}
    -DCMAKE_CXX_FLAGS="-O0 ${CXX_FLAGS}"
    -DUSE_OPENMP:BOOL=TRUE
  - cd build
  - travis_wait 60 make VERBOSE=1 -j 2
  - make install
  - cd ..
  - mv install install_OpenMP

script:
#  - export OMP_NUM_THREADS=1
#  - cp -r install_noOpenMP install
#  - cd tests
#  - ./run_tests.sh
#  - cd ../
#  - rm -rf install
  - export OMP_NUM_THREADS=2
  - cp -r install_OpenMP install
#  - cd tests
#  - ./run_tests.sh
#  - cd ../
  - cd install/bin/unittests
  - ctest

notifications:
  email: false

after_success:
    # Creating report
  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
  - lcov --list coverage.info #debug info
  # Uploading report to CodeCov
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
