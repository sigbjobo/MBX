/******************************************************************************
Copyright 2019 The Regents of the University of California.
All Rights Reserved.

Permission to copy, modify and distribute any part of this Software for
educational, research and non-profit purposes, without fee, and without
a written agreement is hereby granted, provided that the above copyright
notice, this paragraph and the following three paragraphs appear in all
copies.

Those desiring to incorporate this Software into commercial products or
use for commercial purposes should contact the:
Office of Innovation & Commercialization
University of California, San Diego
9500 Gilman Drive, Mail Code 0910
La Jolla, CA 92093-0910
Ph: (858) 534-5815
FAX: (858) 534-7345
E-MAIL: invent@ucsd.edu

IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING
LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE, EVEN IF THE UNIVERSITY
OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

THE SOFTWARE PROVIDED HEREIN IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
ENHANCEMENTS, OR MODIFICATIONS. THE UNIVERSITY OF CALIFORNIA MAKES NO
REPRESENTATIONS AND EXTENDS NO WARRANTIES OF ANY KIND, EITHER IMPLIED OR
EXPRESS, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR THAT THE USE OF THE
SOFTWARE WILL NOT INFRINGE ANY PATENT, TRADEMARK OR OTHER RIGHTS.
******************************************************************************/

#include "tools/testutils.h"
#include "potential/2b/x2b_A1B2_A1B2_v1x.h"
#include "potential/2b/x2b_A1B2Z2_C1D2_v1x.h"
#include "potential/2b/x2b_A1B2Z2_C1D4_deg3_exp0_v1x.h"
#include "potential/2b/x2b-A1B2Z2_C-v1x.h"
#include "potential/2b/x2b_A1B4_A1B4_deg4_exp0_v1x.h"
#include "potential/2b/x2b-v9x.h"

#include <vector>
#include <iostream>
#include <iomanip>
#include <random>
#include <cmath>
#include <utility>

constexpr double TOL = 1E-6;

TEST_CASE("x2b_A1B2_A1B2_v1x::struct") {
    SECTION("co2-co2") {
        std::vector<double> xyz1 = {6.6630444410e-01,  -3.8357176030e-01, 1.1519802350e-01,  1.7838183644e+00,
                                    -1.9222069500e-01, -1.7587628680e-01, -4.4811475090e-01, -5.7997649630e-01,
                                    4.1069507510e-01,  6.6630444410e-01,  -3.8357176030e-01, 1.1519802350e-01,
                                    1.7838183644e+00,  -1.9222069500e-01, -1.7587628680e-01, -4.4811475090e-01,
                                    -5.7997649630e-01, 4.1069507510e-01,  6.6630444410e-01,  -3.8357176030e-01,
                                    1.1519802350e-01,  1.7838183644e+00,  -1.9222069500e-01, -1.7587628680e-01,
                                    -4.4811475090e-01, -5.7997649630e-01, 4.1069507510e-01,  6.6630444410e-01,
                                    -3.8357176030e-01, 1.1519802350e-01,  1.7838183644e+00,  -1.9222069500e-01,
                                    -1.7587628680e-01, -4.4811475090e-01, -5.7997649630e-01, 4.1069507510e-01};
        std::vector<double> xyz2 = {2.4803292099e+00,  7.5103875900e-01,  -2.9043390394e+00, 2.2674715176e+00,
                                    1.8651909097e+00,  -2.6082983571e+00, 2.7020706245e+00,  -3.5351972400e-01,
                                    -3.2106052081e+00, -1.4243133388e+00, 7.7214187430e-01,  -2.3329941557e+00,
                                    -2.4475497469e+00, 1.2692755042e+00,  -2.0709757555e+00, -4.0159255460e-01,
                                    2.6460559090e-01,  -2.5998516399e+00, 6.4986549630e-01,  3.4030903031e+00,
                                    -6.8029207450e-01, 7.9296435600e-02,  2.4412841935e+00,  -3.3312155960e-01,
                                    1.2145816282e+00,  4.3686301334e+00,  -1.0197806380e+00, 5.1568113210e-01,
                                    3.8303951459e+00,  -4.0222969886e+00, -3.7522694700e-01, 3.2992897240e+00,
                                    -3.4756612500e+00, 1.3973748074e+00,  4.3616623515e+00,  -4.5737147405e+00};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 4;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 9.2886922733e-01;
        std::vector<double> grad1_expected = {
            4.2836652432e+00,  6.3074562760e-01,  -8.5918478829e-01, -1.5266795348e+00, 4.5930321037e-01,
            -1.9154748633e+00, -2.1610696419e+00, -3.4288771856e-01, 4.4410281584e-01,  -4.4194461871e+00,
            -5.8136963986e-01, 1.2479559076e-01,  1.9931236056e+00,  5.8288324765e-01,  -8.4626067850e-01,
            1.7192146623e+00,  7.5705855899e-01,  -1.9614165357e+00, 1.5431895736e+00,  2.1901660370e+00,
            -7.9903226894e-01, -7.5333474497e-01, 6.1897982187e-01,  4.1413180499e-02,  -1.6259099786e+00,
            6.1079412219e-02,  3.5759192385e-01,  -2.5785536040e-02, -5.9398518880e-02, 6.0449818120e-02,
            5.3257511735e-02,  3.6431383759e-02,  -4.0714415477e-02, -3.2887948722e-02, 1.7550184532e-02,
            -1.4244942326e-02};
        std::vector<double> grad2_expected = {
            -2.4855545333e-01, 1.1213986763e-02,  1.4720807684e+00,  -1.9224235032e-01, -9.5406181948e-02,
            4.2979134666e-01,  -1.5511826292e-01, -6.6296892423e-01, 4.2868472070e-01,  4.1976952831e+00,
            -2.1011829148e+00, -9.1608295762e-01, -2.0299920851e+00, 1.0624041832e+00,  6.1456456193e-01,
            -1.4605952787e+00, 2.8020656484e-01,  2.9844000191e+00,  -2.0191536606e+00, -2.9016781358e+00,
            1.1046587045e+00,  1.6226323047e+00,  -2.0099720079e+00, 2.1707338440e-02,  1.2325765059e+00,
            2.0414248726e+00,  -7.2633887831e-01, -1.7727677956e-01, 5.4378691702e-03,  -1.4902605674e-04,
            1.1731987313e-01,  4.7533210772e-03,  -7.8761791010e-03, 6.5372879458e-02,  -4.7742396585e-03,
            2.5347448405e-03};
        std::vector<double> virial_expected = {1.8068446294e-01,  -2.9887779240e+00, 1.1505203548e+00,
                                               -2.9887779240e+00, 7.4309743102e+00,  -5.0183109093e+00,
                                               1.1505203548e+00,  -5.0183109093e+00, 1.3835171657e+01};

        x2b_A1B2_A1B2_deg5::x2b_A1B2_A1B2_v1x ph("co2", "co2");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }
}

TEST_CASE("x2b_A1B2Z2_C1D2_v1x::struct") {
    SECTION("h2o-co2") {
        std::vector<double> xyz1 = {
            -9.1278996460e-01, 1.3711133940e+00,  -2.9257875690e+00, -4.0252047300e-01, 1.9907698680e+00,
            -3.4499780000e+00, -1.7848310380e+00, 1.3696631160e+00,  -3.3238997190e+00, -9.1278996460e-01,
            1.3711133940e+00,  -2.9257875690e+00, -4.0252047300e-01, 1.9907698680e+00,  -3.4499780000e+00,
            -1.7848310380e+00, 1.3696631160e+00,  -3.3238997190e+00, -9.1278996460e-01, 1.3711133940e+00,
            -2.9257875690e+00, -4.0252047300e-01, 1.9907698680e+00,  -3.4499780000e+00, -1.7848310380e+00,
            1.3696631160e+00,  -3.3238997190e+00, -9.1278996460e-01, 1.3711133940e+00,  -2.9257875690e+00,
            -4.0252047300e-01, 1.9907698680e+00,  -3.4499780000e+00, -1.7848310380e+00, 1.3696631160e+00,
            -3.3238997190e+00, -9.1278996460e-01, 1.3711133940e+00,  -2.9257875690e+00, -4.0252047300e-01,
            1.9907698680e+00,  -3.4499780000e+00, -1.7848310380e+00, 1.3696631160e+00,  -3.3238997190e+0};
        std::vector<double> xyz2 = {
            6.6630444410e-01,  -3.8357176030e-01, 1.1519802350e-01,  1.7838183644e+00,  -1.9222069500e-01,
            -1.7587628680e-01, -4.4811475090e-01, -5.7997649630e-01, 4.1069507510e-01,  2.4803292099e+00,
            7.5103875900e-01,  -2.9043390394e+00, 2.2674715176e+00,  1.8651909097e+00,  -2.6082983571e+00,
            2.7020706245e+00,  -3.5351972400e-01, -3.2106052081e+00, -1.4243133388e+00, 7.7214187430e-01,
            -2.3329941557e+00, -2.4475497469e+00, 1.2692755042e+00,  -2.0709757555e+00, -4.0159255460e-01,
            2.6460559090e-01,  -2.5998516399e+00, 6.4986549630e-01,  3.4030903031e+00,  -6.8029207450e-01,
            7.9296435600e-02,  2.4412841935e+00,  -3.3312155960e-01, 1.2145816282e+00,  4.3686301334e+00,
            -1.0197806380e+00, 5.1568113210e-01,  3.8303951459e+00,  -4.0222969886e+00, -3.7522694700e-01,
            3.2992897240e+00,  -3.4756612500e+00, 1.3973748074e+00,  4.3616623515e+00,  -4.5737147405e+00};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 5;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 7.5362344392e+02;
        std::vector<double> grad1_expected = {
            -1.0291903673e-01, -9.0563377706e-02, 6.0489667491e-02,  3.4085456364e-02,  7.8255832123e-02,
            -7.2119624943e-02, 8.0115902494e-03,  4.2751485126e-02,  -4.8650192514e-02, -1.0975316454e-01,
            -2.5429048649e-02, -4.7960082476e-01, 2.9456459063e-01,  -1.3104991880e-01, 1.3828350656e-01,
            8.6486820480e-01,  1.2415922836e-01,  4.7242533383e-01,  8.4346687062e+01,  6.9664515025e+01,
            -5.8024598318e+02, -6.7671641339e+02, -1.0400699076e+03, 1.0067069487e+03,  4.3220930219e+02,
            -2.3799501903e+02, 3.3527736129e+02,  1.1813845351e-01,  8.6669380723e-01,  1.4938778827e+00,
            3.2330664892e-02,  2.3390205602e-01,  3.2440903313e-01,  1.0695857650e+00,  1.2503370722e-01,
            8.4615123483e-01,  3.4134840407e+01,  7.1430317113e+01,  -7.6125274446e+00, 8.8282813842e+00,
            9.1823295248e+01,  -9.7450888549e+00, -1.3166815848e+01, 5.2366578014e+00,  -8.8952292687e+00};
        std::vector<double> grad2_expected = {
            9.9078217484e-01,  4.2037699473e-01,  -6.7931100111e-01, 3.1829427916e-01,  -1.0597311794e-01,
            1.9077687205e-01,  -1.2482544639e+00, -3.4484781634e-01, 5.4881427902e-01,  -7.9241574195e-01,
            2.6850813041e+00,  1.0197778181e+00,  -6.4052573636e-01, -8.0276537843e-01, -4.9065502743e-01,
            3.8326184743e-01,  -1.8499961865e+00, -6.6023080633e-01, 5.8512813490e+02,  4.6678621535e+02,
            -5.5256388297e+02, -1.4923396930e+02, 1.3064745232e+02,  4.1522870625e+01,  -2.7573374147e+02,
            6.1096674397e+02,  -2.5069731451e+02, 2.8352802372e+00,  5.3953005729e+00,  -3.5063628776e+00,
            -2.3535618188e+00, -3.3504918950e+00, -7.3879938108e-01, -1.7017733018e+00, -3.2704382483e+00,
            1.5807241080e+00,  -2.8713478885e+01, -2.6831679577e+01, 1.6845139039e+01,  -6.7927994574e+00,
            -1.4788895346e+02, 1.2499253342e+01,  5.7099723990e+00,  6.2303628743e+00,  -3.0915468136e+00};
        std::vector<double> virial_expected = {9.5345687924e+02,  5.1320557907e+02,  -3.3395885269e+02,
                                               5.1320557907e+02,  1.8897800093e+03,  -1.2748725485e+03,
                                               -3.3395885269e+02, -1.2748725485e+03, 1.0536993559e+03};

        x2b_A1B2Z2_C1D2_deg4::x2b_A1B2Z2_C1D2_v1x ph("h2o", "co2");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }
}

TEST_CASE("x2b_A1B2Z2_C1D4_v1x::struct") {
    SECTION("h2o-ch4") {
        std::vector<double> xyz1 = {-4.4590985000e-03, -5.1342579600e-02, 3.0000158138e+00,  9.8613021140e-01,
                                    -7.4573098400e-02, 3.0000054324e+00,  -1.5974709230e-01, 8.9671808950e-01,
                                    3.0000164932e+00,  -4.4590985000e-03, -5.1342579600e-02, 1.5813800000e-05,
                                    9.8613021140e-01,  -7.4573098400e-02, 5.4324000000e-06,  -1.5974709230e-01,
                                    8.9671808950e-01,  1.6493200000e-05};
        std::vector<double> xyz2 = {
            -5.9895400000e+00, -4.3787000000e-01, 2.5724300000e+00,  -5.2478300000e+00, 1.0363000000e-01,
            1.9881600000e+00,  -6.5511600000e+00, 2.3073000000e-01,  3.1955700000e+00,  -6.6391500000e+00,
            -8.8267000000e-01, 1.9054200000e+00,  -5.4527200000e+00, -1.1652700000e+00, 3.1896100000e+00,
            -5.9895400000e+00, -4.3787000000e-01, 2.5724300000e+00,  -5.2478300000e+00, 1.0363000000e-01,
            1.9881600000e+00,  -6.5511600000e+00, 2.3073000000e-01,  3.1955700000e+00,  -6.6391500000e+00,
            -8.8267000000e-01, 1.9054200000e+00,  -5.4527200000e+00, -1.1652700000e+00, 3.1896100000e+00};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 2;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 9.3915973596e-03;
        std::vector<double> grad1_expected = {7.1983905305e-02,  2.8008512763e-01,  1.3564668044e-03, -1.2769127585e-01,
                                              -2.4872930945e-03, -6.7981912618e-04, 5.3617917016e-02, -2.7434424756e-01,
                                              -6.5677711267e-04, 1.1592813988e-01,  2.8175665333e-01, 4.0248971519e-03,
                                              -1.7606532089e-01, 8.6698614328e-03,  1.5949006613e-03, 5.6211408265e-02,
                                              -2.9012237319e-01, -2.8502477674e-03};
        std::vector<double> grad2_expected = {
            -3.9709553276e-01, 1.0302282035e-01,  -4.8458735126e-02, 8.4758131776e-02,  4.8669984918e-02,
            -6.2290488571e-02, 1.0462974755e-01,  -5.8123444661e-02, -3.6959458986e-02, 1.2123751266e-01,
            2.1811861739e-02,  5.4625751628e-02,  8.8559594292e-02,  -1.1863480933e-01, 9.3063060490e-02,
            -2.9655905708e-01, -3.7299313780e-02, 1.3047877673e-01,  1.0464636191e-01,  8.2723613327e-02,
            -9.1732665656e-02, 8.7505040843e-02,  -3.9476133032e-02, -6.1322958408e-02, 5.6076963139e-02,
            2.3221153210e-02,  -2.2773280558e-03, 5.2256463928e-02,  -2.9473461294e-02, 2.2084625345e-02};
        std::vector<double> virial_expected = {3.6097074212e-01,  -1.5858101032e-01, 1.3089644321e-02,
                                               -1.5858101032e-01, 4.4031923998e-01,  2.5842611038e-01,
                                               1.3089644321e-02,  2.5842611038e-01,  -5.7781384144e-02};

        x2b_A1B2Z2_C1D4_deg3_exp0::x2b_A1B2Z2_C1D4_v1x ph("h2o", "ch4");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }
}

TEST_CASE("x2b_h2o_ion_v2x::struct") {
    SECTION("h2o-li") {
        std::vector<double> xyz1 = {1.7474594210e+00, -1.4737233740e+00, -1.3296783390e+00,
                                    2.2444822770e+00, -1.7974450600e+00, -2.0835207810e+00,
                                    1.0684055850e+00, -2.1338516330e+00, -1.1304174950e+00};
        std::vector<double> xyz2 = {-1.7782237730e-01, 1.5460063700e-01, -1.0620904050e+00};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 1;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 8.0147096979e-01;
        std::vector<double> grad1_expected = {-3.9877621083e+00, 3.4502566355e+00,  -4.0490509777e+00,
                                              -1.1748994038e-01, -8.4942782557e-02, 3.6255623717e+00,
                                              -6.6489531430e-03, 2.4150584196e-01,  1.6119575870e-01};
        std::vector<double> grad2_expected = {4.1119010018e+00, -3.6068196949e+00, 2.6229284736e-01};
        std::vector<double> virial_expected = {7.9704483438e+00,  -6.7379303355e+00, -1.1875391214e+00,
                                               -6.7379303355e+00, 6.0049981227e+00,  8.5298529793e-01,
                                               -1.1875391214e+00, 8.5298529793e-01,  2.6307963878e+00};

        h2o_ion::x2b_h2o_ion_v2x ph("h2o", "li");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }

    SECTION("h2o-na") {
        std::vector<double> xyz1 = {2.7721678110e+00,  8.2864804120e-01,  1.3407652800e+00,  2.8242223750e+00,
                                    5.9951176200e-01,  2.2720625940e+00,  3.6577708060e+00,  6.7292239890e-01,
                                    1.0032623000e+00,  -1.0695654940e+00, -1.6239523270e+00, -2.5977628240e-01,
                                    -1.6372337220e+00, -1.4281547330e+00, -1.0129308230e+00, -1.3257667840e+00,
                                    -2.4893344620e+00, 5.9173029930e-02,  -1.7765826110e+00, 2.1211182870e-01,
                                    -2.2850759190e+00, -1.6076762700e+00, 3.9673134650e-02,  -3.2146924790e+00,
                                    -2.6124275400e+00, 6.8516610220e-01,  -2.2745541860e+00, 1.1557765290e+00,
                                    2.9477075680e+00,  4.0818352720e-01,  1.9410235610e+00,  2.6842002830e+00,
                                    8.9989145890e-01,  1.1206057440e+00,  3.9037648930e+00,  4.3935098830e-01};
        std::vector<double> xyz2 = {2.9835636860e-01,  5.8244279830e-01,  -2.3250860780e-01, 2.9835636860e-01,
                                    5.8244279830e-01,  -2.3250860780e-01, 2.9835636860e-01,  5.8244279830e-01,
                                    -2.3250860780e-01, 2.9835636860e-01,  5.8244279830e-01,  -2.3250860780e-01};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 4;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 7.3392533177e+00;
        std::vector<double> grad1_expected = {
            -2.9293080668e+00, -1.4238878213e+00, -2.0431170732e+00, 6.6133448112e-01,  4.8243727809e-01,
            -1.7239437288e-02, 2.0624333577e-01,  4.8002299178e-01,  7.1454590284e-01,  5.9519124643e+00,
            7.0156420822e+00,  1.9469978675e+00,  -3.4862885911e-01, 3.5350423199e-01,  -6.2420257223e-01,
            -3.1811498423e-01, 7.2226695033e-01,  -9.0641847467e-01, 2.9047971253e+00,  1.4315123570e+00,
            2.0725764548e+00,  -8.3736224307e-01, -2.8361722149e-01, 4.3818552069e-02,  -2.4262632115e-01,
            -6.1273947988e-01, -4.8588966611e-01, -4.8269719070e+00, -7.3657306172e+00, -3.2987344885e+00,
            5.7802289992e-01,  -4.2489112496e-01, 3.4855888223e-01,  7.4813673700e-01,  -8.5608934192e-01,
            3.8969721730e-01};
        std::vector<double> grad2_expected = {2.0617302499e+00,  4.6142755143e-01,  1.3458106077e+00,
                                              -5.2851686210e+00, -8.0914132646e+00, -4.1637682060e-01,
                                              -1.8248085611e+00, -5.3515565568e-01, -1.6305053407e+00,
                                              3.5008122701e+00,  8.6467110841e+00,  2.5604783890e+00};
        std::vector<double> virial_expected = {1.8132640431e+01, 2.0508966300e+01, 7.5854568492e+00,
                                               2.0508966300e+01, 4.0304984914e+01, 7.3118984343e+00,
                                               7.5854568492e+00, 7.3118984343e+00, 7.0543914173e+00};

        h2o_ion::x2b_h2o_ion_v2x ph("h2o", "na");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }
    SECTION("h2o-k") {
        std::vector<double> xyz1 = {
            2.6597493150e+00,  3.7459420900e+00,  -2.7115058550e-01, 3.6168052410e+00,  3.6909856940e+00,
            -3.0898568140e-01, 2.4756964800e+00,  4.6869357310e+00,  -3.0447203980e-01, -2.4596215450e+00,
            -1.3307686320e+00, 1.6558717950e-01,  -2.8502305670e+00, -1.6982123550e+00, 9.6207666330e-01,
            -2.9142201740e+00, -1.7646650170e+00, -5.6040167150e-01, 2.3868934490e+00,  -3.1455907500e+00,
            4.1103255950e-02,  2.7089746660e+00,  -3.6401137150e+00, -7.1446525680e-01, 2.7729279050e+00,
            -3.5736975860e+00, 8.0718092060e-01,  -1.9864852310e+00, 1.5070138030e+00,  2.1838885590e-02,
            -2.7550924640e+00, 2.0773876700e+00,  2.9247198430e-02,  -2.3285334330e+00, 6.0539680420e-01,
            7.5568470150e-02,  4.6520682970e-01,  -1.0776665390e+00, 3.1610115760e-02,  -4.3418595880e-01,
            -1.4146126480e+00, 8.4118085910e-02,  1.0496754310e+00,  -1.8470977930e+00, 4.0629166460e-02};
        std::vector<double> xyz2 = {7.9016737220e-01,  1.6129075690e+00,  -9.9484716940e-02, 7.9016737220e-01,
                                    1.6129075690e+00,  -9.9484716940e-02, 7.9016737220e-01,  1.6129075690e+00,
                                    -9.9484716940e-02, 7.9016737220e-01,  1.6129075690e+00,  -9.9484716940e-02,
                                    7.9016737220e-01,  1.6129075690e+00,  -9.9484716940e-02};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 5;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 1.0512435167e+01;
        std::vector<double> grad1_expected = {
            -6.0919090874e+00, -6.9602707139e+00, 5.5979477294e-01,  -1.0562351807e-01, -7.9558690288e-02,
            7.9116174968e-03,  -6.9001028168e-02, -1.1164290020e-01, 7.7720122363e-03,  3.7160630257e-01,
            2.9805719439e-01,  -2.8628419070e-02, -1.5328484241e-01, -1.2369305478e-01, -2.0409886129e-01,
            -1.3519924052e-01, -1.0491130737e-01, 2.2620221074e-01,  7.4673922978e-02,  3.0325499370e-01,
            -1.6374817120e-02, -3.5521867817e-02, -1.2111476318e-01, 4.8173701014e-04,  -3.4994437459e-02,
            -1.2056702814e-01, 1.3030820182e-02,  1.0936102388e+01,  9.9126446086e-01,  -5.0290693925e-01,
            5.1134730810e-01,  -1.6384552647e-01, -1.4339851102e-02, 4.2798493059e-01,  -2.6285568571e-01,
            -6.5148358204e-03, 1.8461439631e+00,  1.4000568524e+01,  -6.8868254689e-01, -2.1430215062e-01,
            6.9270080544e-01,  -2.1227750365e-02, 2.6947583063e-01,  5.6634853685e-01,  -3.6045729678e-02};
        std::vector<double> grad2_expected = {
            6.2665336337e+00,  7.1514723044e+00,  -5.7547840267e-01, -8.3122219640e-02, -6.9452832242e-02,
            6.5250696247e-03,  -4.1576177025e-03, -6.1573202388e-02, 2.8622599281e-03,  -1.1875434627e+01,
            -5.6456324868e-01, 5.2376162617e-01,  -1.9013176431e+00, -1.5259617867e+01, 7.4595602694e-01};
        std::vector<double> virial_expected = {4.5752275578e+01,  2.0145317288e+01,  -2.7887423768e+00,
                                               2.0145317288e+01,  5.7292526073e+01,  -3.3333465732e+00,
                                               -2.7887423768e+00, -3.3333465732e+00, 5.8187619383e-01};

        h2o_ion::x2b_h2o_ion_v2x ph("h2o", "k");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }

    SECTION("h2o-rb") {
        std::vector<double> xyz1 = {
            -1.7428543420e+00, -4.0415235570e+00, -5.2281327930e-02, -1.2799702230e+00, -4.8814607780e+00,
            -5.5259141270e-02, -2.6687334400e+00, -4.2895947640e+00, -8.5281669350e-02, 4.3383131180e+00,
            3.2390181030e+00,  1.3325160940e-02,  5.2925835800e+00,  3.2442801940e+00,  1.1175183190e-01,
            4.1012507660e+00,  4.1572127150e+00,  -1.2194934820e-01, 4.6436621030e+00,  -1.4024067280e+00,
            2.4136366790e-04,  4.5256285580e+00,  -2.3519501630e+00, 5.3458050450e-02,  5.5915768500e+00,
            -1.2763749330e+00, -7.0366450030e-02, -1.8876071560e+00, 2.6224545870e+00,  2.5212264120e-02,
            -1.6560764410e+00, 3.5536300830e+00,  5.1521484640e-03,  -2.8474164440e+00, 2.6208630030e+00,
            2.6359847690e-02,  2.7843038080e+00,  7.9342504490e-01,  3.1934423250e-02,  3.4447677520e+00,
            8.8767431400e-02,  1.9511609960e-02,  3.2945296650e+00,  1.6135004810e+00,  2.3451158790e-02};
        std::vector<double> xyz2 = {-2.0182527570e-02, 2.1755455960e-01,  7.4740077520e-02,  -2.0182527570e-02,
                                    2.1755455960e-01,  7.4740077520e-02,  -2.0182527570e-02, 2.1755455960e-01,
                                    7.4740077520e-02,  -2.0182527570e-02, 2.1755455960e-01,  7.4740077520e-02,
                                    -2.0182527570e-02, 2.1755455960e-01,  7.4740077520e-02};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 5;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 5.6933692562e+00;
        std::vector<double> grad1_expected = {
            1.6652514429e-01,  3.6507724768e-01,  8.8083142798e-03,  -2.4276317085e-01, -6.7442058937e-02,
            -7.1673419983e-03, 1.0877185748e-01,  -2.1985763448e-01, 3.2266416564e-04,  -3.6081944687e-02,
            -1.9227459472e-01, 3.8615380340e-02,  -1.2293912517e-01, 1.3100132426e-01,  -3.8639340805e-02,
            1.1031237371e-01,  2.3176002654e-02,  3.1409734776e-03,  -5.3757410020e-02, 2.9170443906e-01,
            -4.3547909514e-02, 1.1580163284e-01,  -5.3930699671e-02, 1.7435982910e-03,  -1.4621882048e-01,
            -1.9732362810e-01, 3.8834930470e-02,  3.9205422558e+00,  -5.0342773711e+00, 1.0394354652e-01,
            -9.5172023783e-02, -2.4561716131e-01, 5.2354928116e-03,  2.5349902981e-01,  2.9247558774e-02,
            -1.0094838621e-03, -1.1595521947e+01, -2.3318181985e+00, 1.7512012103e-01,  -5.6570510204e-01,
            -1.3710128986e-01, 9.5488161374e-03,  -6.3674619511e-01, -1.4448468354e-01, 1.0874788379e-02};
        std::vector<double> grad2_expected = {
            -3.2533830928e-02, -7.7777554259e-02, -1.9636364471e-03, 4.8708696142e-02, 3.8097267807e-02,
            -3.1170130130e-03, 8.4174597665e-02,  -4.0450111287e-02, 2.9693807528e-03, -4.0788692619e+00,
            5.2506469736e+00,  -1.0816955547e-01, 1.2797973244e+01,  2.6134041719e+00, -1.9554372554e-01};
        std::vector<double> virial_expected = {4.5642319513e+01,  -2.2265218880e+00, -3.5216462197e-01,
                                               -2.2265218880e+00, 1.4735301926e+01,  -3.9753562772e-01,
                                               -3.5216462197e-01, -3.9753562772e-01, 2.1131079863e-02};

        h2o_ion::x2b_h2o_ion_v2x ph("h2o", "rb");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }

    SECTION("h2o-cs") {
        std::vector<double> xyz1 = {
            -5.2718689600e+00, -5.1184387920e+00, -6.4447592170e-02, -5.0429736460e+00, -5.9701878600e+00,
            3.0875632580e-01,  -6.2136505200e+00, -5.1783815240e+00, -2.3191504100e-01, 8.7247460360e+00,
            -4.0707243320e+00, -4.9403338130e-01, 8.5842549660e+00,  -5.0180937930e+00, -5.2607205250e-01,
            9.6750071550e+00,  -3.9764821660e+00, -4.1521702300e-01, 4.6423862440e+00,  4.8846581920e+00,
            -7.9319686810e-01, 5.5888140450e+00,  5.0435305540e+00,  -8.1230703670e-01, 4.2565170720e+00,
            5.7495827880e+00,  -9.4900547950e-01, 1.9577742960e+00,  1.6498238250e+00,  -2.6803938630e+00,
            2.2798079560e+00,  1.0538141290e+00,  -3.3606054190e+00, 1.0744078230e+00,  1.8837916330e+00,
            -2.9741712370e+00, 2.4393531210e+00,  2.5097433290e+00,  4.9496556790e+00,  2.9546761940e+00,
            2.0407189980e+00,  5.6082326770e+00,  1.7445021530e+00,  2.9323398370e+00,  5.4575274610e+00};
        std::vector<double> xyz2 = {3.2822936850e+00,  2.4725476270e+00,  -3.3685766700e-01, 3.2822936850e+00,
                                    2.4725476270e+00,  -3.3685766700e-01, 3.2822936850e+00,  2.4725476270e+00,
                                    -3.3685766700e-01, 3.2822936850e+00,  2.4725476270e+00,  -3.3685766700e-01,
                                    3.2822936850e+00,  2.4725476270e+00,  -3.3685766700e-01};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 5;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 1.3721453047e+01;
        std::vector<double> grad1_expected = {
            0.0000000000e+00,  0.0000000000e+00,  0.0000000000e+00,  0.0000000000e+00,  0.0000000000e+00,
            0.0000000000e+00,  0.0000000000e+00,  0.0000000000e+00,  0.0000000000e+00,  0.0000000000e+00,
            0.0000000000e+00,  0.0000000000e+00,  0.0000000000e+00,  0.0000000000e+00,  0.0000000000e+00,
            0.0000000000e+00,  0.0000000000e+00,  0.0000000000e+00,  -1.0496828792e+01, -1.8535980131e+01,
            3.5075669649e+00,  -9.8790579312e-01, -1.5084415221e+00, 2.7992613975e-01,  -7.3288494900e-01,
            -1.6127621150e+00, 2.9990708938e-01,  9.8732161531e+00,  6.1259720188e+00,  1.7461736647e+01,
            7.1252846389e-01,  5.9190414677e-01,  1.4871313656e+00,  9.3464776519e-01,  4.4239299090e-01,
            1.4214812139e+00,  5.2910436184e-03,  -8.3975079034e-03, -1.9211127235e-01, -7.4874812829e-02,
            5.4833950946e-02,  9.0593594441e-02,  6.7614916946e-02,  -4.8449132263e-02, 1.0250922817e-01};
        std::vector<double> grad2_expected = {
            0.0000000000e+00,  0.0000000000e+00,  0.0000000000e+00, 0.0000000000e+00,  0.0000000000e+00,
            0.0000000000e+00,  1.2217619534e+01,  2.1657183768e+01, -4.0874001940e+00, -1.1520392382e+01,
            -7.1602691565e+00, -2.0370349227e+01, 1.9688522649e-03, 2.0126892196e-03,  -9.9155025922e-04};
        std::vector<double> virial_expected = {3.3208346030e+01, 3.9881569005e+01, 2.2074636916e+01,
                                               3.9881569005e+01, 6.0060555575e+01, 7.1489379734e+00,
                                               2.2074636916e+01, 7.1489379734e+00, 5.0968165932e+01};

        h2o_ion::x2b_h2o_ion_v2x ph("h2o", "cs");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }

    SECTION("h2o-f") {
        std::vector<double> xyz1 = {-1.5897242500e+00, 1.0433792200e+00, -8.7808400000e-02, -6.3591971000e-01,
                                    9.7898520000e-01,  0.0000000000e+00, -1.9006628000e+00, 1.7450105000e+00,
                                    -6.6454990000e-01, 1.6492450700e+00, 1.0859465600e+00,  0.0000000000e+00,
                                    2.6087802600e+00,  1.0958770400e+00, -2.8171150000e-02, 1.3383065300e+00,
                                    1.7875778400e+00,  5.7674150000e-01, -6.1315209000e-01, 2.4697633600e+00,
                                    2.0700508600e+00,  3.4684791000e-01, 2.4697633600e+00,  2.0700508600e+00,
                                    -9.3360667000e-01, 3.3746991900e+00, 2.0700508600e+00};
        std::vector<double> xyz2 = {-1.3248347200e+00, 5.3532195400e+00, 2.0794472700e+00,
                                    -1.3248347200e+00, 5.3532195400e+00, 2.0794472700e+00,
                                    -1.3248347200e+00, 5.3532195400e+00, 2.0794472700e+00};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 3;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 4.3477247053e+00;
        std::vector<double> grad1_expected = {
            -1.1227050167e-02, -1.7054848446e-01, 5.9914979488e-02,  -2.1694071081e-01, 2.5796472668e-03,
            -2.3848394620e-01, 2.5410953885e-01,  -5.8181080025e-02, 7.2350027754e-02,  1.6981983517e-01,
            2.9835001893e-01,  1.8667219944e-01,  -2.2900947944e-01, -8.7754278611e-02, -4.3688890370e-02,
            -4.1648876394e-02, -5.3814663662e-02, -7.1796240862e-02, 6.2541870439e+00,  3.7724217948e+00,
            1.3736308671e-02,  -5.0290375718e+00, -2.0489585939e+00, -3.0841853086e-03, -3.8596630867e+00,
            1.2382032860e+01,  5.1465780125e-02};
        std::vector<double> grad2_expected = {-2.5941777875e-02, 2.2614991722e-01,  1.0621893895e-01,
                                              1.0083852067e-01,  -1.5678107665e-01, -7.1187068212e-02,
                                              2.6345136146e+00,  -1.4105496061e+01, -6.2117903488e-02};
        std::vector<double> virial_expected = {6.2654643453e+00,  -4.5830222758e+00, 4.9530169647e-03,
                                               -4.5830222758e+00, 2.9241609500e+01,  -3.6782631456e-02,
                                               4.9530169647e-03,  -3.6782631456e-02, 2.1255104870e-02};

        h2o_ion::x2b_h2o_ion_v2x ph("h2o", "f");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }

    SECTION("h2o-cl") {
        std::vector<double> xyz1 = {-2.7779788628e+00, -1.2138510369e+00, -9.9016424210e-01, -3.1030683424e+00,
                                    -1.1366008838e+00, -8.7095115600e-02, -1.8474762122e+00, -9.3644366510e-01,
                                    -8.7665907830e-01, 2.7779802634e+00,  -1.2138539695e+00, 9.9017206560e-01,
                                    3.1030657497e+00,  -1.1366202434e+00, 8.7100109000e-02,  1.8474760058e+00,
                                    -9.3645194440e-01, 8.7666618950e-01,  -2.7779819073e+00, 1.2138365139e+00,
                                    9.9016818380e-01,  -3.1030647065e+00, 1.1366277718e+00,  8.7093204400e-02,
                                    -1.8474796079e+00, 9.3642846220e-01,  8.7665930130e-01};
        std::vector<double> xyz2 = {2.9477000000e-06, 1.4926000000e-06, -5.0210000000e-07,
                                    2.9477000000e-06, 1.4926000000e-06, -5.0210000000e-07,
                                    2.9477000000e-06, 1.4926000000e-06, -5.0210000000e-07};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 3;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 1.8214933607e+01;
        std::vector<double> grad1_expected = {6.6123073258e+00,  3.8106297908e+00,  7.9787774783e+00, 7.1414775674e-02,
                                              -8.4942175015e-01, -4.5886550402e+00, 9.6051916327e+00, 4.9539001953e+00,
                                              3.8149201238e+00,  -6.6123146779e+00, 3.8105051312e+00, -7.9787924531e+00,
                                              -7.1398082154e-02, -8.4933215546e-01, 4.5886588211e+00, -9.6051002235e+00,
                                              4.9539614017e+00,  -3.8149486844e+00, 6.6124411337e+00, -3.8103798101e+00,
                                              -7.9789080381e+00, 7.1385736400e-02,  8.4922691684e-01, 4.5887244567e+00,
                                              9.6053183435e+00,  -4.9539097523e+00, -3.8149657282e+00};
        std::vector<double> grad2_expected = {-1.6288913734e+01, -7.9151082359e+00, -7.2050425619e+00,
                                              1.6288812984e+01,  -7.9151343774e+00, 7.2050823164e+00,
                                              -1.6289145214e+01, 7.9150626455e+00,  7.2051493097e+00};
        std::vector<double> virial_expected = {1.0900787695e+02,  -1.7102235325e+01, 1.4973737383e+01,
                                               -1.7102235325e+01, 2.4897224464e+01,  8.0418432246e+00,
                                               1.4973737383e+01,  8.0418432246e+00,  3.2535419291e+01};

        h2o_ion::x2b_h2o_ion_v2x ph("h2o", "cl");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }

    SECTION("h2o-br") {
        std::vector<double> xyz1 = {2.9449221580e-01,  -2.3515357490e+00, 1.4448241600e+00,  9.3123346580e-01,
                                    -1.7883803440e+00, 9.8602249620e-01,  -4.7767612580e-01, -1.7721721880e+00,
                                    1.4851854640e+00,  -1.1228350600e+00, -3.3355538770e+00, -9.7989539360e-01,
                                    -5.7480679740e-01, -3.2522363550e+00, -1.8933695080e-01, -1.5382865730e+00,
                                    -2.4675748990e+00, -1.0199580330e+00, 1.2756361190e-01,  2.3112777530e+00,
                                    -1.6555462120e+00, 7.5744314660e-01,  1.5825624740e+00,  -1.6347682740e+00,
                                    -6.8646837650e-01, 1.8720990840e+00,  -1.3681834210e+00, 5.9987029440e-01,
                                    2.3606804510e+00,  1.2735125440e+00,  -2.1307295330e-01, 1.8440595680e+00,
                                    1.3669355470e+00,  5.1046011720e-01,  2.6935426750e+00,  3.7069924640e-01};
        std::vector<double> xyz2 = {-2.2081312000e+00, 1.9766936770e-01,  2.3930482270e-01,  -2.2081312000e+00,
                                    1.9766936770e-01,  2.3930482270e-01,  -2.2081312000e+00, 1.9766936770e-01,
                                    2.3930482270e-01,  -2.2081312000e+00, 1.9766936770e-01,  2.3930482270e-01};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 4;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 5.1083755134e+00;
        std::vector<double> grad1_expected = {
            2.1812427811e-02,  3.0979297201e+00,  -1.6472348182e+00, -8.3606303087e-01, -1.7230866923e+00,
            1.0890178518e+00,  -1.6138361945e+00, 1.4102105539e+00,  -1.1009073718e+00, 7.3503039116e-01,
            1.7230969267e+00,  2.1699338135e+00,  -7.9817322256e-01, -7.9802459465e-01, -1.6057443021e+00,
            -5.4636436335e-01, 1.5617845547e+00,  5.9965858818e-01,  -3.1456428345e-01, -4.2066108494e+00,
            1.4340648855e+00,  -9.6578365216e-01, 2.3914741378e+00,  -3.8553811688e-01, -1.9730859357e+00,
            -1.6908488070e+00, 2.2156801410e+00,  -2.6597969657e+00, -6.7104948867e-01, -3.0919316235e+00,
            -1.9601730895e+00, -1.9709505708e+00, -1.0920880944e+00, 8.7139317983e-01,  -3.6380015650e-01,
            2.2122818480e+00};
        std::vector<double> grad2_expected = {2.4280867976e+00,  -2.7850535817e+00, 1.6591243382e+00, 6.0950719475e-01,
                                              -2.4868568867e+00, -1.1638480996e+00, 3.2534338713e+00, 3.5059855186e+00,
                                              -3.2642069096e+00, 3.7485768753e+00,  3.0058002160e+00, 1.9717378698e+00};
        std::vector<double> virial_expected = {2.1846331178e+01, 5.7150092761e+00,  1.7435811803e+00,
                                               5.7150092761e+00, 2.8765367337e+01,  -3.7222910422e+00,
                                               1.7435811803e+00, -3.7222910422e+00, 1.4951588855e+01};

        h2o_ion::x2b_h2o_ion_v2x ph("h2o", "br");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }

    SECTION("h2o-i") {
        std::vector<double> xyz1 = {-1.9241468480e-01, 1.9155705330e+00,  2.8729503730e-01,  1.3098311460e-01,
                                    1.5163560550e+00,  -5.3687756990e-01, 3.6604087590e-01,  1.4605919950e+00,
                                    9.2913201070e-01,  1.8747005130e+00,  -4.4458083900e-03, 1.2632670970e+00,
                                    2.7061460750e+00,  4.3268909980e-01,  1.0723481030e+00,  1.5844339740e+00,
                                    -2.8091426600e-01, 3.7182734630e-01,  -1.9558589850e+00, -4.5252174400e-01,
                                    -3.4230967610e-01, -1.1735673540e+00, -6.7460403140e-01, -8.6743569380e-01,
                                    -1.6808671290e+00, 3.8964630530e-01,  3.7430620690e-02};
        std::vector<double> xyz2 = {1.1556338420e+00, -2.9688203590e-01, -1.9238635900e+00,
                                    1.1556338420e+00, -2.9688203590e-01, -1.9238635900e+00,
                                    1.1556338420e+00, -2.9688203590e-01, -1.9238635900e+00};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 3;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 2.4994988349e+01;
        std::vector<double> grad1_expected = {
            7.6332172285e+00,  -9.0590025206e+00, -5.2847379841e+00, 4.0819076547e+00,  -8.8169364644e+00,
            -5.8795867906e+00, -2.7353757466e+00, 2.2340696661e+00,  -2.0101266630e+00, 1.5153310400e+00,
            -1.6884882683e-01, -1.8649417097e+01, -4.3959372037e+00, -2.0511337289e+00, 2.1731829119e+00,
            -3.9131809407e+00, 1.1082681379e+00,  -1.6987930480e+01, 9.5670818224e+00,  3.5589395227e+00,
            -2.7517152162e+00, 8.0107182275e+00,  1.4915613446e+00,  -3.6931998169e+00, -1.7932343166e+00,
            -3.1030529787e+00, -1.0267559446e+00};
        std::vector<double> grad2_expected = {-8.9797491365e+00, 1.5641869319e+01,  1.3174451438e+01,
                                              6.7937871044e+00,  1.1117144179e+00,  3.3464164665e+01,
                                              -1.5784565733e+01, -1.9474478886e+00, 7.4716709776e+00};
        std::vector<double> virial_expected = {6.3056916367e+01,  -1.0909805214e+01, -1.7487275421e+01,
                                               -1.0909805214e+01, 3.6879269577e+01,  2.8907219384e+01,
                                               -1.7487275421e+01, 2.8907219384e+01,  1.2776838847e+02};

        h2o_ion::x2b_h2o_ion_v2x ph("h2o", "i");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }
}

TEST_CASE("x2b_A1B4_A1B4_v1x::struct") {
    SECTION("ch4-ch4") {
        std::vector<double> xyz1 = {-3.3099600000e+00, 1.4404010000e+01,  1.3046900000e+01,  -2.5090200000e+00,
                                    1.4669480000e+01,  1.2329400000e+01,  -4.1929500000e+00, 1.4316780000e+01,
                                    1.2445600000e+01,  -3.1944300000e+00, 1.3405090000e+01,  1.3412900000e+01,
                                    -3.2439700000e+00, 1.5197490000e+01,  1.3763500000e+01};
        std::vector<double> xyz2 = {-6.9251900000e+00, 1.2729200000e+01,  1.2999000000e+01,  -6.3721200000e+00,
                                    1.3024600000e+01,  1.3829800000e+01,  -7.4085400000e+00, 1.3486100000e+01,
                                    1.2437900000e+01,  -6.3225200000e+00, 1.2150900000e+01,  1.2339100000e+01,
                                    -7.6702900000e+00, 1.1987100000e+01,  1.3413300000e+01};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 1;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 1.6326245771e-01;
        std::vector<double> grad1_expected = {
            2.6705871951e-02,  -2.1520848300e-01, 3.5120828621e-01,  -2.5309794301e-01, -2.6530898155e-02,
            -1.0126295028e-02, -3.5542545215e-01, -1.1910007087e-01, -5.6796268527e-02, -1.8290606495e-02,
            9.3866814782e-02,  -1.1827884400e-02, -6.7376112408e-02, -1.0789961783e-01, -1.3436837235e-01};
        std::vector<double> grad2_expected = {2.6797785861e-01, 3.9077760758e-02,  -4.2918516823e-01, 1.6594589633e-01,
                                              8.1731288952e-02, -2.0622524478e-02, 9.5033086369e-02,  -6.0983933339e-03,
                                              6.4547066476e-02, -2.9496588277e-02, 1.7609714893e-01,  1.3186855341e-01,
                                              1.6802398908e-01, 8.4064449772e-02,  1.1530260691e-01};
        std::vector<double> virial_expected = {2.4056733951e+00,  1.1759679418e+00,  -4.8198844235e-01,
                                               1.1759679418e+00,  9.4856914781e-01,  -1.9674355416e-02,
                                               -4.8198844235e-01, -1.9674355416e-02, 1.4518642364e-01};

        x2b_A1B4_A1B4_deg4_exp0::x2b_A1B4_A1B4_v1x ph("ch4", "ch4");
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }
}

TEST_CASE("x2b_v9x::struct") {
    SECTION("h2o-h2o") {
        std::vector<double> xyz1 = {1.7474594210e+00,  -1.4737233740e+00, -1.3296783390e+00, 2.2444822770e+00,
                                    -1.7974450600e+00, -2.0835207810e+00, 1.0684055850e+00,  -2.1338516330e+00,
                                    -1.1304174950e+00, 1.7474594210e+00,  -1.4737233740e+00, -1.3296783390e+00,
                                    2.2444822770e+00,  -1.7974450600e+00, -2.0835207810e+00, 1.0684055850e+00,
                                    -2.1338516330e+00, -1.1304174950e+00};
        std::vector<double> xyz2 = {7.4372664830e-01,  1.3745066180e+00,  8.2228117080e-01,  1.5966080550e+00,
                                    9.4041883440e-01,  1.0251293750e+00,  8.4611620640e-01,  2.3077049320e+00,
                                    1.0097486520e+00,  2.8905925930e+00,  -1.7061104380e-01, 9.3095149180e-01,
                                    2.7240924310e+00,  -7.8786885510e-01, 2.0726128570e-01,  3.3243787470e+00,
                                    -6.6848224410e-01, 1.6262376630e+00};
        std::vector<double> grad1(xyz1.size(), 0.0);
        std::vector<double> grad2(xyz2.size(), 0.0);
        size_t ndim = 2;
        std::vector<double> virial(9, 0.0);

        double energy_expected = 4.3150257624e+00;
        std::vector<double> grad1_expected = {1.2563135491e-01,  -1.2797876775e-01, 2.7288516037e-01, -1.2759824572e-01,
                                              5.8244766442e-02,  -1.2645960580e-01, 7.1938034852e-02, 1.6052347464e-01,
                                              -7.5595691561e-02, 7.5632040650e+00,  4.1772548895e+00, 1.2659517070e+01,
                                              3.8492687061e-01,  1.1295431152e+00,  9.4293707984e-01, 5.0647177664e-01,
                                              1.2347152426e+00,  7.2663855762e-01};
        std::vector<double> grad2_expected = {
            2.6608429402e-01,  -9.5315088847e-03, 3.0301261059e-01,  -3.5929577276e-01, -4.0740584191e-02,
            -1.7305221458e-01, 2.3240334704e-02,  -4.0517380256e-02, -2.0079025902e-01, -1.0094769333e+00,
            -3.3531895202e+00, -2.8808009830e+00, -6.5090890399e+00, -3.5740779611e+00, -1.0209638571e+01,
            -9.3603673911e-01, 3.8575423399e-01,  -1.2386531532e+00};
        std::vector<double> virial_expected = {9.4857101932e+00, 7.0202529345e+00, 1.5350808086e+01,
                                               7.0202529345e+00, 8.0945192175e+00, 1.2761828774e+01,
                                               1.5350808086e+01, 1.2761828774e+01, 2.6576313383e+01};

        x2o::x2b_v9x ph;
        double e_nograd = ph.eval(xyz1.data(), xyz2.data(), ndim);
        double e = ph.eval(xyz1.data(), xyz2.data(), grad1.data(), grad2.data(), ndim, &virial);

        REQUIRE(e_nograd == Approx(energy_expected).margin(TOL));
        REQUIRE(e == Approx(energy_expected).margin(TOL));
        REQUIRE(VectorsAreEqual(grad1, grad1_expected, TOL));
        REQUIRE(VectorsAreEqual(grad2, grad2_expected, TOL));
        REQUIRE(VectorsAreEqual(virial, virial_expected, TOL));
    }
}
